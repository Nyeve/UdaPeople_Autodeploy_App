# ---
# - name: create backend directory
#   become: yes
#   file:
#     path: ~/backend
#     state: directory
#     mode: 0755
# - name: copy backend files
#   become: yes
#   copy:
#     src: ~/project/artifact.tar.gz
#     dest: ~/backend/artifact.tar.gz
# - name: unpack backend files
#   become: yes
#   shell: |
#     cd ~/backend
#     tar -vxf artifact.tar.gz
#     rm -f artifact.tar.gz
# - name: start app 
#   become: yes
#   shell: |
#     cd ~/backend
#     npm install
#     pm2 stop default
#     pm2 start npm -- start
#     cd dist
#     pm2 start main.js --update-env
# ---
# - name: "install dependencies."
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     state: latest
#     update_cache: yes

# - name: "install pm2"
#   become: true
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present

# - name: Creates directory
#   file:
#     path: /home/ubuntu/backend
#     state: directory

# - name: Copy backend dist files web server
#   copy:
#     src: /root/project/artifact.tar.gz
#     dest: /home/ubuntu/backend/artifact.tar.gz

# - name: Uncompress Backend
#   shell: |
#     cd /home/ubuntu/backend
#     tar xvzf artifact.tar.gz -C .
#     ls -la
    
# - name: Build
#   become: true
#   shell: |
#     cd /home/ubuntu/backend
#     npm install
#     npm run build
# - name: Start PM2
#   shell: |
#     cd /home/ubuntu/backend 
#     pm2 start npm --name backend -- start
#(currently running)
# ---
# - name: "Copy dist backend directory to EC2 server"
#   become: yes
#   copy:
#     src: ~/project/artifact.tar.gz
#     dest: /home/ubuntu/artifact.tar.gz

# - name: "Install Ansible dependencies"
#   become: true
#   apt:
#     name: ["nodejs", "npm", "python3", "tar", "gzip", "git"]
#     state: latest
#     update_cache: yes    

# - name: "Create directory for backend"
#   file:
#     path: /home/ubuntu/backend/
#     state: directory

# - name: prepare binaries
#   become: true
#   shell: |
#     cd /home/ubuntu
#     tar xvzf artifact.tar.gz -C .

# - name: start server
#   become: true
#   shell: |
#     cd /home/ubuntu
#     npm install 
#     sudo npm install pm2 -g
#     pm2 stop default
#     pm2 start npm --name backend -- start
#   async: 45
#   poll: 0

---   
- name: Create app dir
  become: yes
  file:
    path: /home/ubuntu/app
    state: directory

- name: "Copy backend build folder to EC2"
  become: yes
  unarchive:
    src: /tmp/workspace/backend.tar.gz
    dest: /home/ubuntu/app/
    owner: ubuntu

- name: "Copy package.json to EC2"
  become: yes
  copy:
    src: /tmp/workspace/package.json
    dest: /home/ubuntu/app/
    owner: ubuntu

- name: "NPM Install"
  shell:
    cmd: npm install --production
    chdir: /home/ubuntu/app

- name: "Start backend with pm2"
  become: yes
  shell: |
    cd /home/ubuntu/app
    pm2 start main.js --name app
  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "./migrations"
    TYPEORM_MIGRATIONS: "./migrations/*.js"
    TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"